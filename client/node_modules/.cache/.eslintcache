[{"C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\index.tsx":"1","C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\App.tsx":"2","C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\context\\shop-context.tsx":"3","C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\components\\navbar.tsx":"4","C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\pages\\auth\\index.tsx":"5","C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\pages\\shop\\index.tsx":"6","C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\pages\\checkout\\index.tsx":"7","C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\pages\\purchased-items\\index.tsx":"8","C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\hooks\\useGetToken.ts":"9","C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\hooks\\useGetProducts.ts":"10","C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\models\\errors.ts":"11","C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\pages\\shop\\product.tsx":"12","C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\pages\\checkout\\cart-item.tsx":"13","C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\components\\Home.tsx":"14","C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\pages\\login\\index.tsx":"15"},{"size":263,"mtime":1714378992416,"results":"16","hashOfConfig":"17"},{"size":1163,"mtime":1715850015567,"results":"18","hashOfConfig":"17"},{"size":4960,"mtime":1714234032413,"results":"19","hashOfConfig":"17"},{"size":1577,"mtime":1715850444826,"results":"20","hashOfConfig":"17"},{"size":1808,"mtime":1715849323981,"results":"21","hashOfConfig":"17"},{"size":703,"mtime":1713456157072,"results":"22","hashOfConfig":"17"},{"size":1414,"mtime":1713456157072,"results":"23","hashOfConfig":"17"},{"size":974,"mtime":1713456157072,"results":"24","hashOfConfig":"17"},{"size":213,"mtime":1713456157072,"results":"25","hashOfConfig":"17"},{"size":427,"mtime":1713456157072,"results":"26","hashOfConfig":"17"},{"size":367,"mtime":1713456157072,"results":"27","hashOfConfig":"17"},{"size":969,"mtime":1713456157072,"results":"28","hashOfConfig":"17"},{"size":1073,"mtime":1713456157072,"results":"29","hashOfConfig":"17"},{"size":1321,"mtime":1714985463965,"results":"30","hashOfConfig":"17"},{"size":2617,"mtime":1715850275250,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1aayeyu",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"53"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\index.tsx",[],[],"C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\App.tsx",[],[],"C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\context\\shop-context.tsx",["85","86","87","88","89"],[],"import { ReactNode, createContext, useEffect, useState } from \"react\";\r\nimport { useGetProducts } from \"../hooks/useGetProducts\";\r\nimport { IProduct } from \"../models/interfaces\";\r\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { ProductErrors } from \"../models/errors\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useGetToken } from \"../hooks/useGetToken\";\r\n\r\nexport interface IShopContext {\r\n  getCartItemCount: (itemId: string) => number;\r\n  addToCart: (itemId: string) => void;\r\n  updateCartItemCount: (newAmount: number, itemId: string) => void;\r\n  getTotalCartAmount: () => number;\r\n  removeFromCart: (itemId: string) => void;\r\n  checkout: (customerID: string) => void;\r\n  availableMoney: number;\r\n  fetchAvailableMoney: () => void;\r\n  purchasedItems: IProduct[];\r\n  isAuthenticated: boolean;\r\n  setIsAuthenticated: (isAuthenticated: boolean) => void;\r\n \r\n}\r\n\r\nexport const ShopContext = createContext<IShopContext | null>(null);\r\n\r\nexport const ShopContextProvider = (props) => {\r\n  const [cookies, setCookies] = useCookies([\"access_token\"]);\r\n  const [cartItems, setCartItems] = useState<{ string: number } | {}>({}); // { itemID: amount }\r\n  const [availableMoney, setAvailableMoney] = useState<number>(0);\r\n  const [purchasedItems, setPurchaseItems] = useState<IProduct[]>([]); // [itemID: amount]\r\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(\r\n    cookies.access_token !== undefined\r\n  );\r\n\r\n  const { products, fetchProducts } = useGetProducts();\r\n  const { headers } = useGetToken();\r\n  const navigate = useNavigate();\r\n\r\n  const fetchAvailableMoney = async () => {\r\n    const res = await axios.get(\r\n      `http://localhost:3001/auth/available-money/${localStorage.getItem(\r\n        \"userID\"\r\n      )}`,\r\n      { headers }\r\n    );\r\n    setAvailableMoney(res.data.availableMoney);\r\n  };\r\n\r\n  const fetchPurchasedItems = async () => {\r\n    const res = await axios.get(\r\n      `http://localhost:3001/products/purchased-items/${localStorage.getItem(\r\n        \"userID\"\r\n      )}`,\r\n      { headers }\r\n    );\r\n\r\n    setPurchaseItems(res.data.purchasedItems);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      fetchAvailableMoney();\r\n      fetchPurchasedItems();\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      localStorage.clear();\r\n      setCookies(\"access_token\", null);\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  const getCartItemCount = (itemId: string): number => {\r\n    if (itemId in cartItems) {\r\n      return cartItems[itemId];\r\n    }\r\n\r\n    return 0;\r\n  };\r\n\r\n  const getTotalCartAmount = () => {\r\n    if (products.length === 0) return 0;\r\n\r\n    let totalAmount = 0;\r\n    for (const item in cartItems) {\r\n      if (cartItems[item] > 0) {\r\n        let itemInfo: IProduct = products.find(\r\n          (product) => product._id === item\r\n        );\r\n\r\n        totalAmount += cartItems[item] * itemInfo.price;\r\n      }\r\n    }\r\n    return Number(totalAmount.toFixed(2));\r\n  };\r\n\r\n  const addToCart = (itemId: string) => {\r\n    if (!cartItems[itemId]) {\r\n      setCartItems((prev) => ({ ...prev, [itemId]: 1 }));\r\n    } else {\r\n      setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n    }\r\n  };\r\n\r\n  const removeFromCart = (itemId: string) => {\r\n    if (!cartItems[itemId]) return;\r\n    setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\r\n  };\r\n\r\n  const updateCartItemCount = (newAmount: number, itemId: string) => {\r\n    setCartItems((prev) => ({ ...prev, [itemId]: newAmount }));\r\n  };\r\n\r\n  const checkout = async () => {\r\n    const body = { customerID: localStorage.getItem(\"userID\"), cartItems };\r\n    try {\r\n      const res = await axios.post(\r\n        \"http://localhost:3001/products/checkout\",\r\n        body,\r\n        { headers }\r\n      );\r\n      setPurchaseItems(res.data.purchasedItems);\r\n      fetchAvailableMoney();\r\n      fetchProducts();\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      let errorMessage: string = \"\";\r\n      switch (err.response.data.type) {\r\n        case ProductErrors.NO_PRODUCT_FOUND:\r\n          errorMessage = \"No product found\";\r\n          break;\r\n        case ProductErrors.NO_AVAILABLE_MONEY:\r\n          errorMessage = \"Not enough money\";\r\n          break;\r\n        case ProductErrors.NOT_ENOUGH_STOCK:\r\n          errorMessage = \"Not enough stock\";\r\n          break;\r\n        default:\r\n          errorMessage = \"Something went wrong\";\r\n      }\r\n\r\n      alert(\"ERROR: \" + errorMessage);\r\n    }\r\n  };\r\n\r\n  const contextValue: IShopContext = {\r\n    getCartItemCount,\r\n    addToCart,\r\n    updateCartItemCount,\r\n    removeFromCart,\r\n    getTotalCartAmount,\r\n    checkout,\r\n    availableMoney,\r\n    fetchAvailableMoney,\r\n    purchasedItems,\r\n    isAuthenticated,\r\n    setIsAuthenticated,\r\n \r\n\r\n  };\r\n\r\n  return (\r\n    <ShopContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </ShopContext.Provider>\r\n  );\r\n};\r\n\r\n\r\n",[],"C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\components\\navbar.tsx",[],[],"C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\pages\\auth\\index.tsx",[],[],"C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\pages\\shop\\index.tsx",["90","91","92","93"],[],"import { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Product } from \"./product\";\r\n\r\nimport \"./styles.css\";\r\nimport { useGetProducts } from \"../../hooks/useGetProducts\";\r\n\r\nexport const ShopPage = () => {\r\n  const [cookies, _] = useCookies([\"access_token\"]);\r\n\r\n  const { products } = useGetProducts();\r\n\r\n  if (!cookies.access_token) {\r\n    return <Navigate to=\"/auth\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"shop\">\r\n      <div className=\"products\">\r\n        {products.map((product) => (\r\n          <Product product={product} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n",[],"C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\pages\\checkout\\index.tsx",["94"],[],"import React, { useContext } from \"react\";\r\nimport { ShopContext } from \"../../context/shop-context\";\r\nimport { CartItem } from \"./cart-item\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport \"./styles.css\";\r\nimport { useGetProducts } from \"../../hooks/useGetProducts\";\r\nimport { IProduct } from \"../../models/interfaces\";\r\n\r\nexport const CheckoutPage = () => {\r\n  const { getCartItemCount, getTotalCartAmount, checkout } =\r\n    useContext(ShopContext);\r\n  const totalAmount = getTotalCartAmount();\r\n\r\n  const { products } = useGetProducts();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <div>\r\n        <h1>Your Cart Items</h1>\r\n      </div>\r\n      <div className=\"cart\">\r\n        {products.map((product: IProduct) => {\r\n          if (getCartItemCount(product._id) !== 0) {\r\n            return <CartItem data={product} />;\r\n          }\r\n        })}\r\n      </div>\r\n\r\n      {totalAmount > 0 ? (\r\n        <div className=\"checkout\">\r\n          <p> Subtotal: ${totalAmount} </p>\r\n          <button onClick={() => navigate(\"/\")}> Continue Shopping </button>\r\n          <button\r\n            onClick={() => {\r\n              checkout(localStorage.getItem(\"userID\"));\r\n            }}\r\n          >\r\n            {\" \"}\r\n            Checkout{\" \"}\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <h1> Your Shopping Cart is Empty</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\pages\\purchased-items\\index.tsx",[],[],"C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\hooks\\useGetToken.ts",["95"],[],"import { useCookies } from \"react-cookie\";\r\nexport const useGetToken = () => {\r\n  const [cookies, _] = useCookies([\"access_token\"]);\r\n\r\n  return {\r\n    headers: { authorization: cookies.access_token },\r\n  };\r\n};\r\n","C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\hooks\\useGetProducts.ts",[],[],"C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\models\\errors.ts",[],[],"C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\pages\\shop\\product.tsx",["96"],[],"import React, { useContext } from \"react\";\r\nimport { ShopContext } from \"../../context/shop-context\";\r\nimport { IProduct } from \"../../models/interfaces\";\r\n\r\ninterface Props {\r\n  product: IProduct;\r\n}\r\n\r\nexport const Product = (props: Props) => {\r\n  const { _id, productName, description, price, stockQuantity, imageURL } =\r\n    props.product;\r\n  const { addToCart, getCartItemCount } = useContext(ShopContext);\r\n\r\n  const cartItemCount = getCartItemCount(_id);\r\n\r\n  return (\r\n    <div className=\"product\">\r\n      <img src={imageURL} />\r\n      <div className=\"description\">\r\n        <h3>{productName}</h3>\r\n        <p>{description}</p>\r\n        <p> ${price}</p>\r\n      </div>\r\n      <button className=\"addToCartBttn\" onClick={() => addToCart(_id)}>\r\n        Add To Cart {cartItemCount > 0 && <> ({cartItemCount})</>}\r\n      </button>\r\n\r\n      <div className=\"stockQuantity\">\r\n        {stockQuantity === 0 && <h1> OUT OF STOCK</h1>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\pages\\checkout\\cart-item.tsx",["97","98","99"],[],"import React, { useContext } from \"react\";\r\nimport { ShopContext } from \"../../context/shop-context\";\r\nimport { IProduct } from \"../../models/interfaces\";\r\n\r\ninterface Props {\r\n  data: IProduct;\r\n}\r\n\r\nexport const CartItem = (props: Props) => {\r\n  const { _id, productName, description, price, stockQuantity, imageURL } =\r\n    props.data;\r\n  const { getCartItemCount, addToCart, removeFromCart, updateCartItemCount } =\r\n    useContext(ShopContext);\r\n\r\n  const cartItemCount = getCartItemCount(_id);\r\n  return (\r\n    <div className=\"cartItem\">\r\n      <img src={imageURL} />\r\n      <div className=\"description\">\r\n        <p>\r\n          <b>{productName}</b>\r\n        </p>\r\n        <p> Price: ${price}</p>\r\n        <div className=\"countHandler\">\r\n          <button onClick={() => removeFromCart(_id)}> - </button>\r\n          <input\r\n            value={cartItemCount}\r\n            onChange={(e) => updateCartItemCount(Number(e.target.value), _id)}\r\n          />\r\n          <button onClick={() => addToCart(_id)}> + </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\components\\Home.tsx",[],[],"C:\\Users\\laris\\p\\ecommerce-mern-tutorial\\client\\src\\pages\\login\\index.tsx",["100","101"],[],{"ruleId":"102","severity":1,"message":"103","line":1,"column":10,"nodeType":"104","messageId":"105","endLine":1,"endColumn":19},{"ruleId":"102","severity":1,"message":"106","line":4,"column":17,"nodeType":"104","messageId":"105","endLine":4,"endColumn":27},{"ruleId":"102","severity":1,"message":"107","line":4,"column":29,"nodeType":"104","messageId":"105","endLine":4,"endColumn":42},{"ruleId":"108","severity":1,"message":"109","line":66,"column":6,"nodeType":"110","endLine":66,"endColumn":23,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":73,"column":6,"nodeType":"110","endLine":73,"endColumn":23,"suggestions":"113"},{"ruleId":"102","severity":1,"message":"114","line":1,"column":10,"nodeType":"104","messageId":"105","endLine":1,"endColumn":19},{"ruleId":"102","severity":1,"message":"115","line":1,"column":21,"nodeType":"104","messageId":"105","endLine":1,"endColumn":29},{"ruleId":"102","severity":1,"message":"116","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":13},{"ruleId":"102","severity":1,"message":"117","line":11,"column":19,"nodeType":"104","messageId":"105","endLine":11,"endColumn":20},{"ruleId":"118","severity":1,"message":"119","line":25,"column":43,"nodeType":"120","messageId":"121","endLine":25,"endColumn":45},{"ruleId":"102","severity":1,"message":"117","line":3,"column":19,"nodeType":"104","messageId":"105","endLine":3,"endColumn":20},{"ruleId":"122","severity":1,"message":"123","line":18,"column":7,"nodeType":"124","endLine":18,"endColumn":29},{"ruleId":"102","severity":1,"message":"125","line":10,"column":29,"nodeType":"104","messageId":"105","endLine":10,"endColumn":40},{"ruleId":"102","severity":1,"message":"126","line":10,"column":49,"nodeType":"104","messageId":"105","endLine":10,"endColumn":62},{"ruleId":"122","severity":1,"message":"123","line":18,"column":7,"nodeType":"124","endLine":18,"endColumn":29},{"ruleId":"102","severity":1,"message":"127","line":8,"column":10,"nodeType":"104","messageId":"105","endLine":8,"endColumn":17},{"ruleId":"102","severity":1,"message":"117","line":19,"column":10,"nodeType":"104","messageId":"105","endLine":19,"endColumn":11},"@typescript-eslint/no-unused-vars","'ReactNode' is defined but never used.","Identifier","unusedVar","'AxiosError' is defined but never used.","'AxiosResponse' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchAvailableMoney' and 'fetchPurchasedItems'. Either include them or remove the dependency array.","ArrayExpression",["128"],"React Hook useEffect has a missing dependency: 'setCookies'. Either include it or remove the dependency array.",["129"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'_' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'description' is assigned a value but never used.","'stockQuantity' is assigned a value but never used.","'RegPage' is defined but never used.",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [fetchAvailableMoney, fetchPurchasedItems, isAuthenticated]",{"range":"134","text":"135"},"Update the dependencies array to be: [isAuthenticated, setCookies]",{"range":"136","text":"137"},[2297,2314],"[fetchAvailableMoney, fetchPurchasedItems, isAuthenticated]",[2452,2469],"[isAuthenticated, setCookies]"]